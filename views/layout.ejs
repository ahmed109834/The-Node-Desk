<!DOCTYPE html>
<html lang="en" ng-app="ticketApp">

<head>
    <title>New Sails App</title>


        <div ng-controller="CompanyController">
            <div ng-controller="UserController">

                <div class="card bgc-blue-grey-300 tc-white-1 p">
                    <div class="toolbar" color="red">
                        <div class="toolbar__left mr++">
                            <button class="btn btn--l btn--black btn--icon" lx-ripple>
                                <i class="mdi mdi--menu"></i>
                            </button>
                        </div>

                        <span class="toolbar__label fs-title ml">The Node Desk</span>

                        <div class="toolbar__right">
                            <lx-dropdown position="right" from-top>
                                <button class="btn btn--l btn--black btn--icon" lx-ripple lx-dropdown-toggle>
                                    <i class="mdi mdi--more-vert"></i>
                                </button>

                                <lx-dropdown-menu>
                                    <ul>
                                        <li><a class="dropdown-link">Action</a>
                                        </li>
                                        <li><a class="dropdown-link">Another action</a>
                                        </li>
                                        <li><a class="dropdown-link">Something else here</a>
                                        </li>
                                        <li class="dropdown-divider"></li>
                                        <li><a class="dropdown-link dropdown-link--is-header">Header</a>
                                        </li>
                                        <li><a class="dropdown-link">Separated link</a>
                                        </li>
                                    </ul>
                                </lx-dropdown-menu>
                            </lx-dropdown>

                        </div>
                    </div>
                </div>
   <div class="container">
    <div flex-item>
        <lx-select ng-model="query" classs="form-control" placeholder="Searchy" choices="people" floating-label>
            <lx-select-selected>
                {{ $selected.firstName }} - {{ $selected.lastName }}
            </lx-select-selected>

            <lx-select-choices>
               Firstname:{{ $choice.firstName }}  Lastname:{{ $choice.lastName }}
            </lx-select-choices>
        </lx-select>
    </div>


                <!-- Viewport mobile tag for sensible mobile support -->
                <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">


                <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

                <!--STYLES-->
                
                <!--STYLES END-->
                <link href="/css/style.css" rel="stylesheet">
                <link href="/bower_components/angular-xeditable/dist/css/xeditable.css" rel="stylesheet">
                <link href="/bower_components/lumx/dist/css/lumx.css" rel="stylesheet">
                <link href="/bower_components/ng-slider/dist/css/ng-slider.min.css" rel="stylesheet">
                <link href="/css/bootstrap.min.css" rel="stylesheet">
                <link href="/css/autocomplete.css" rel="stylesheet">

                <body>
                    <%- body %>



                        <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

                        <!--TEMPLATES-->
                        
                        <!--TEMPLATES END-->


                        <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

                </body>
                <footer></footer>
                <script src="/js/dependencies/sails.io.js"></script>
                <script src="/bower_components/jquery/dist/jquery.min.js"></script>
                <script src="/bower_components/angular/angular.min.js"></script>
                <script src="/bower_components/angular-resource/angular-resource.min.js"></script>
                <script src="/bower_components/angular-xeditable/dist/js/xeditable.js"></script>
                <script src="/bower_components/velocity/velocity.js"></script>
                <script src="/bower_components/moment/min/moment-with-locales.min.js"></script>
                <script src="/bower_components/lumx/dist/js/lumx.js"></script>
                <script src="/bower_components/ng-slider/dist/ng-slider.min.js"></script>
                <script src="/js/autocomplete.js"></script>
                <script src="/js/angucomplete.js"></script>
                <script src="/js/ticket-app/ticketApp.js"></script>
                <script src="/js/ticket-app/services/user.js"></script>
                <script src="/js/ticket-app/controllers/userController.js"></script>
                <script src="/js/ticket-app/controllers/employeeController.js"></script>
                <script src="/js/ticket-app/services/company.js"></script>
                <script src="/js/ticket-app/controllers/companyController.js"></script>
                <script src="/js/ticket-app/services/group.js"></script>
                <script src="/js/ticket-app/controllers/groupController.js"></script>
                <script src="/js/ticket-app/services/form.js"></script>
                <script src="/js/ticket-app/controllers/formController.js"></script>
                </body>

</html>
